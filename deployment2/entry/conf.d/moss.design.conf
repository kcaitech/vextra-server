server {
    listen 80;
    server_name localhost;

    # set $cors_origin "";
    # if ($http_origin ~* "^https://localhost$") {
    #     set $cors_origin $http_origin;
    # }
    add_header 'Access-Control-Allow-Origin' $http_origin always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-auth-token' always;
    add_header 'Access-Control-Max-Age' 1728000 always;
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # location ~ ^/api_test.*/(communication|documents/ws|documents/upload)$ {
    #     rewrite ^/api_test(_[^/]+)?/(.*) /api$1/$2 break;
    #     proxy_pass http://kcserver-internal-backend;
    #     proxy_redirect off;
    #     proxy_buffering off;
    #     proxy_set_header   Host             $host;
    #     proxy_set_header   X-Real-IP        $remote_addr;
    #     proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    #     proxy_set_header   X-Forwarded-Proto $scheme;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection $connection_upgrade;
    #     proxy_read_timeout 86400;
    #     proxy_send_timeout 86400;
    # }

    # location /api_test {
    #     rewrite ^/api_test(_[^/]+)?/(.*) /api$1/$2 break;
    #     proxy_pass http://kcserver-internal-backend;
    #     proxy_redirect off;
    #     proxy_set_header   Host             $host;
    #     proxy_set_header   X-Real-IP        $remote_addr;
    #     proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    #     proxy_set_header   X-Forwarded-Proto $scheme;
    # }
    # location ~ ^/api.*/(communication|documents/ws|documents/upload)$ {
    #     proxy_pass http://kcserver-cloud-backend;
    #     proxy_redirect off;
    #     proxy_buffering off;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection $connection_upgrade;
    #     proxy_read_timeout 86400;
    #     proxy_send_timeout 86400;
    # }

    # location /api {
    #     proxy_pass http://kcserver-cloud-backend;
    #     proxy_redirect off;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection $connection_upgrade;
    #     proxy_http_version 1.1;
    # }

    location ^~ /BZ6urxGvGm.txt {
        alias /usr/share/nginx/html/BZ6urxGvGm.txt;
        default_type text/plain;
        add_header Content-Disposition inline;
    }

    location ^~ /baidu_verify_codeva-xYbGdxGdMk.html {
        alias /usr/share/nginx/html/baidu_verify_codeva-xYbGdxGdMk.html;
        default_type text/html;
        add_header Content-Disposition inline;
    }

    location ^~ /static/GetCode.html {
        alias /usr/share/nginx/html/GetCode.html;
        default_type text/html;
        add_header Content-Disposition inline;
    }

    location / {
        proxy_pass http://kcserver-cloud-backend;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_http_version 1.1;
    }
}

# server {
#     listen 80;
#     server_name www.moss.design;

#     add_header Access-Control-Allow-Origin '*' always;
#     add_header Access-Control-Allow-Headers '*';
#     add_header Access-Control-Allow-Methods '*';
#     add_header Access-Control-Allow-Credentials 'true';
#     if ($request_method = 'OPTIONS') {
#         return 204;
#     }
#     return 307 https://moss.design$request_uri;
# }