services:
  minio:
    image: quay.io/minio/minio
    entrypoint: sh
    command: -c "minio server /data --console-address ':9001' & sleep 5 && /usr/bin/minio-init.sh && tail -f /dev/null"
    container_name: minio1
    # networks:
    #   kcserver:
    restart: always
    environment:
      TZ: Asia/Shanghai
      MINIO_ROOT_USER: kcserver
      MINIO_ROOT_PASSWORD: kcai1212
      MINIO_REGION: zhuhai-1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - minio_data:/data
      - ./minio/init/init-minio.sh:/usr/bin/minio-init.sh
    ports:
      - "9000:9000" # 测试用
      - "9001:9001"

  mongo:
    image: mongo:latest
    container_name: mongo
    # networks:
    #   kcserver:
    restart: always
    ports:
      - "27017:27017" # 测试用
    environment:
      TZ: Asia/Shanghai
      MONGO_INITDB_DATABASE: kcserver
      MONGO_INITDB_COLLECTION: document
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: jKKsinkjilKKLSW
    volumes:
      - mongo_db:/data/db
      - mongo_configdb:/data/configdb
      # - ./mongo/init/99-index-cmd-id.sh:/docker-entrypoint-initdb.d/99-index-cmd-id.sh
  mysql:
    image: mysql:8.0.32
    container_name: mysql
    # networks:
    #   kcserver:
#        ipv4_address: 172.21.0.2
    restart: always
    ports:
      - "3307:3306"
    command:
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
#      --bind-address=0.0.0.0
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=kKEIjksvnOOIjdZ6rtzE
      - LANG=C.UTF-8
    volumes:
#      - /etc/localtime:/etc/localtime
      - mysql_data:/var/lib/mysql
      # - ./mysql/conf/my.cnf:/etc/my.cnf
      # - ./mysql/conf/conf.d:/etc/my.cnf.d
      - ./mysql/init:/docker-entrypoint-initdb.d
  redis:
    container_name: redis
    image: "redis:alpine3.19"
    restart: always
    volumes:
      - redis_data:/data
    # networks:
    #   - kcserver
    command: redis-server --appendonly yes
    ports:
      - "6380:6379"
    # environment:
    #   - REDIS_PASSWORD=conZYDv8Ro

# networks:
#   kcserver:
    # external: true
  
volumes:
  minio_data:
  mongo_db:
  mongo_configdb:
  mysql_data:
  redis_data: 