kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: userservice
  name: userservice
  namespace: kc
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: userservice
  template:
    metadata:
      labels:
        app: userservice
    spec:
      serviceAccountName: kc
      containers:
        - name: app
          env:
            - name: TZ
              value: "Asia/Shanghai"
          image: "docker-registry.protodesign.cn:35000/userservice:$version_tag"
          imagePullPolicy: Always
          ports:
            - containerPort: 10002
              name: web
              protocol: TCP
          resources: {}
          startupProbe:
            failureThreshold: 300
            httpGet:
              path: /health_check
              port: 10002
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health_check
              port: 10002
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health_check
              port: 10002
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - name: userservice-config
              mountPath: /app/config
              readOnly: true
            - name: jwt-config
              mountPath: /app/common/jwt/config
              readOnly: true
            - name: snowflake-config
              mountPath: /app/common/snowflake/config
              readOnly: true
            - name: storage-config
              mountPath: /app/common/storage/config
              readOnly: true
            - name: mongo-config
              mountPath: /app/common/mongo/config
              readOnly: true
            - name: redis-config
              mountPath: /app/common/redis/config
              readOnly: true
      volumes:
        - name: userservice-config
          secret:
            secretName: userservice-config
        - name: jwt-config
          secret:
            secretName: jwt-config
        - name: snowflake-config
          secret:
            secretName: snowflake-config
        - name: storage-config
          secret:
            secretName: storage-config
        - name: mongo-config
          secret:
            secretName: mongo-config
        - name: redis-config
          secret:
            secretName: redis-config
---
kind: Service
apiVersion: v1
metadata:
  name: userservice
  namespace: kc
spec:
  selector:
    app: userservice
  type: ClusterIP
  ports:
    - name: web
      port: 10002
      targetPort: 10002
      protocol: TCP
